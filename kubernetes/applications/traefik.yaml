# kubernetes/applications/traefik.yaml (RECONSTRUCTED v2.0)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 37.0.0
    helm:
      releaseName: traefik
      # LOGIC: Use valuesObject instead of a multi-line 'values' string.
      # This eliminates any ambiguity from YAML formatting/indentation,
      # passing a structured object directly to the Helm templating engine.
      # This is the most robust way to provide complex values.
      valuesObject:
        # LOGIC: These are all top-level keys in the official values.yaml,
        # intended to be consumed by Kubernetes templating, not Traefik's binary.
        # By placing them here, we ensure they modify the Deployment spec correctly.
        deployment:
          kind: Deployment
          replicas: 1
        
        # LOGIC: Use the direct hostPort mapping. This remains the core strategy
        # for exposing Traefik on a single-node cluster without a LoadBalancer.
        ports:
          web:
            port: 8000
            hostPort: 80
          websecure:
            port: 8443
            hostPort: 443
            tls:
              enabled: true
              
        # LOGIC: Explicitly set service type to ClusterIP to prevent the chart
        # from attempting to create a LoadBalancer or NodePort service, which
        # would conflict with hostPort.
        service:
          type: ClusterIP
          
        # LOGIC: These are critical for scheduling the pod on a tainted
        # single-node cluster. This structure is confirmed correct by the chart docs.
        tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
          
        # LOGIC: Explicitly define providers. The CRD provider is essential
        # for Traefik to read IngressRoute objects.
        providers:
          kubernetesCRD:
            enabled: true

  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true