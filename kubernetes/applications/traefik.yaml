# kubernetes/applications/traefik.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 37.0.0 # Using a specific chart version as per your initial info
    helm:
      releaseName: traefik
      valuesObject:
        deployment:
          kind: DaemonSet
        
        # This is a global setting for the chart, not nested under deployment
        updateStrategy:
          type: OnDelete

        hostNetwork: true
        dnsPolicy: ClusterFirstWithHostNet
        
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
          privileged: true
          # allowPrivilegeEscalation is implicitly true when privileged is true,
          # but being explicit can avoid confusion.
          allowPrivilegeEscalation: true
          runAsUser: 0
          runAsGroup: 0

        ports:
          web:
            hostPort: 80
            port: 80
          websecure:
            hostPort: 443
            port: 443
            tls:
              enabled: true
        
        providers:
          kubernetesCRD:
            enabled: true
            allowEmptyServices: true 
        
        rbac:
          enabled: true
        
        tolerations:
          - key: "node-role.kubernetes.io/control-plane"
            operator: "Exists"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"
        
        service:
          enabled: false

  destination:
    server: 'https://kubernetes.default.svc'
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
    # --- [START OF CORRECTION] ---
    # This managedNamespaceMetadata block will ensure Argo CD labels the 'traefik'
    # namespace correctly for the Pod Security Admission controller.
    # This tells K3s to apply the 'privileged' security standard to this namespace,
    # which allows running containers as root (runAsUser: 0) and with high privileges,
    # resolving the "breaks non-root policy" error.
    managedNamespaceMetadata:
      labels:
        pod-security.kubernetes.io/enforce: privileged
        pod-security.kubernetes.io/audit: privileged
        pod-security.kubernetes.io/warn: privileged
    # --- [END OF CORRECTION] ---