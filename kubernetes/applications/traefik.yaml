# kubernetes/applications/traefik.yaml (FINAL & CORRECTED VERSION)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 37.0.0
    helm:
      releaseName: traefik
      valuesObject:
        deployment:
          kind: Deployment
          replicas: 1
        
        ports:
          web:
            port: 8000
            hostPort: 80
          websecure:
            port: 8443
            hostPort: 443
            tls:
              enabled: true
              
        service:
          type: ClusterIP
          
        tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Exists"
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"
          
        providers:
          kubernetesCRD:
            enabled: true

        # --- SECURITY CONTEXT FIX (THE FINAL PIECE) ---
        # LOGIC: This is the definitive fix for the 'permission denied' error.
        # The Traefik Helm chart defaults to running as a non-root user without special
        # privileges. To bind to privileged host ports (< 1024), the process needs
        # specific Linux capabilities.
        securityContext:
          # 1. We explicitly grant the 'NET_BIND_SERVICE' capability. This is the
          #    most secure and standard way to allow a non-root process to bind
          #    to privileged ports.
          capabilities:
            drop: [ALL]
            add: [NET_BIND_SERVICE]
          
          # 2. We ensure the process does not run as root, maintaining a good
          #    security posture where possible.
          runAsNonRoot: true
          runAsUser: 65532 # You can use the chart's default or any non-root UID
          
          # 3. We prevent the process from gaining more privileges.
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        
        # LOGIC: Also apply a security context at the pod level.
        podSecurityContext:
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532

  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true