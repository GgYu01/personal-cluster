# kubernetes/applications/traefik.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 37.0.0
    helm:
      releaseName: traefik
      # --- MODIFICATION: MAXIMUM PERMISSIONS & SIMPLIFICATION ---
      valuesObject:
        # Use DaemonSet to ensure Traefik runs on the node
        deployment:
          kind: DaemonSet
          # For single-node, this is a simple and effective update strategy.
          updateStrategy:
            type: OnDelete

        # Use host network to bind to host ports directly
        hostNetwork: true
        dnsPolicy: ClusterFirstWithHostNet # Required for hostNetwork
        
        # --- ULTIMATE PERMISSIONS TO BIND PORTS ---
        # This is the core fix for the "permission denied" error.
        securityContext:
          # 1. Allow binding to privileged ports (< 1024)
          capabilities:
            add:
            - NET_BIND_SERVICE
          # 2. Run the container process as root (UID 0)
          runAsUser: 0
          runAsGroup: 0
          # 3. Grant full access to the host system (most insecure but most powerful)
          privileged: true

        # Define the host ports Traefik should listen on.
        ports:
          web:
            hostPort: 80
            port: 80
          websecure:
            hostPort: 443
            port: 443
            tls:
              enabled: true
        
        # Enable Kubernetes CRD provider for IngressRoute, etc.
        providers:
          kubernetesCRD:
            enabled: true
            allowEmptyServices: true # For flexibility
        
        # RBAC is required for Traefik to read Services, Ingresses, etc.
        rbac:
          enabled: true
        
        # Tolerations to allow Traefik to run on the control-plane/master node.
        tolerations:
          - key: "node-role.kubernetes.io/control-plane"
            operator: "Exists"
            effect: "NoSchedule"
          - key: "node-role.kubernetes.io/master"
            operator: "Exists"
            effect: "NoSchedule"
        
        # Disable the default service creation as we are using hostNetwork.
        # This avoids creating an unnecessary ClusterIP/LoadBalancer service.
        service:
          enabled: false

  destination:
    server: 'https://kubernetes.default.svc'
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true