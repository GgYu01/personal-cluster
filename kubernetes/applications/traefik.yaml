# kubernetes/applications/traefik.yaml (DEFINITIVE REWORK)
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "-5"
spec:
  project: default
  source:
    repoURL: https://traefik.github.io/charts
    chart: traefik
    targetRevision: 37.0.0
    helm:
      releaseName: traefik
      valuesObject:
        # --- CORE ARCHITECTURE CHANGE: Use DaemonSet + hostNetwork ---
        # LOGIC: Change deployment kind to DaemonSet. This ensures one Traefik pod runs on each node,
        # which is the standard model for an ingress controller.
        deployment:
          kind: DaemonSet

        # LOGIC: Enable hostNetwork. The pod will now directly use the host's network stack.
        # This COMPLETELY BYPASSES the problematic hostPort and CNI port-mapping layer.
        # Traefik will bind directly to the host's ports 80/443.
        hostNetwork: true
        
        # LOGIC: When hostNetwork is true, K8s requires a specific DNS policy.
        # 'ClusterFirstWithHostNet' is the correct choice.
        dnsPolicy: ClusterFirstWithHostNet

        # --- Port Configuration (Simplified for hostNetwork) ---
        # LOGIC: With hostNetwork: true, the `hostPort` field is IGNORED and UNNECESSARY.
        # The container port now IS the host port. We are telling Traefik to listen
        # on ports 80 and 443 inside its container, which, due to hostNetwork,
        # are the actual host's ports.
        ports:
          web:
            port: 80
          websecure:
            port: 443
            tls:
              enabled: true

        # --- Service Configuration ---
        # LOGIC: A service is still useful for internal discovery.
        # ClusterIP is the correct type. The service ports should match Traefik's listening ports.
        service:
          type: ClusterIP
          spec:
            clusterIP: None # Create a Headless Service, as we don't need load balancing for a DaemonSet.
        
        # --- RBAC, Providers, and Tolerations (Remain Important) ---
        rbac:
          enabled: true
        providers:
          kubernetesCRD:
            enabled: true
        tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
        - key: "node-role.kubernetes.io/master"
          operator: "Exists"
          effect: "NoSchedule"

  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true