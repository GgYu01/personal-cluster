# File: kubernetes/apps/authentik-app.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata: 
  name: authentik
  namespace: argocd
  annotations: 
    argocd.argoproj.io/sync-wave: "10" 
spec: 
  project: default
  source: 
    repoURL: https://charts.goauthentik.io
    chart: authentik
    targetRevision: 2025.8.4
    helm: 
      releaseName: authentik
      values: | 
        # ========= Authentik core =========
        authentik: 
          # >= 64 chars (already OK)
          secret_key: "GPJcN5Rt9p6x4zZ6Vw2qk8H0u1Qy3Lb7Md9Xf2Qa5Ws8Er1Ty3Ui7Zo0Bg4Nv6Kx"
          error_reporting: 
            enabled: false
          postgresql: 
            password: "a_strong_database_password_change_me" 
          redis: 
            password: "" 

        # ========= PostgreSQL (embedded) 极限内存调优 =========
        postgresql: 
          enabled: true
          auth: 
            username: "authentik" 
            database: "authentik" 
            password: "a_strong_database_password_change_me" 
          primary: 
            args: 
              - -c
              - config_file=/bitnami/postgresql/conf/postgresql.conf
              - -c
              - hba_file=/bitnami/postgresql/conf/pg_hba.conf
            configuration: | 
              # ultra-low memory profile for small nodes
              listen_addresses = '*'
              port = '5432'
              wal_level = 'replica'
              fsync = 'on'
              hot_standby = 'on'
              log_connections = 'false'
              log_disconnections = 'false'
              log_hostname = 'false'
              client_min_messages = 'error'
              include_dir = 'conf.d'

              # memory tuning (lower than previous)
              shared_buffers = '16MB'        # was 64MB
              effective_cache_size = '96MB'  # was 192MB
              maintenance_work_mem = '16MB'  # was 32MB
              work_mem = '2MB'               # was 4MB
              max_connections = '25'         # was 50

            resources: 
              requests: 
                cpu: 20m
                memory: 128Mi               # was 256Mi
              limits: 
                cpu: "500m"
                memory: 256Mi               # was 512Mi

        # ========= Redis (embedded) 轻微降配 =========
        redis: 
          enabled: true
          architecture: standalone
          auth: 
            enabled: false
          master: 
            extraFlags: 
              - "--maxmemory 192mb"
              - "--maxmemory-policy allkeys-lru"
            resources: 
              requests: 
                cpu: 20m
                memory: 96Mi                # was 128Mi
              limits: 
                cpu: 300m
                memory: 192Mi               # was 256Mi

        # ========= Server/Worker probes & resources (lower requests) =========
        server: 
          resources: 
            requests: 
              cpu: 50m
              memory: 128Mi                 # was 256Mi
            limits: 
              cpu: "700m"
              memory: 384Mi                 # was 512Mi
          startupProbe: 
            enabled: true
            httpGet: 
              path: /-/health/live/
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 120
          readinessProbe: 
            enabled: true
            httpGet: 
              path: /-/health/ready/
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 60
          livenessProbe: 
            enabled: true
            httpGet: 
              path: /-/health/live/
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6

        worker:
          resources:
            requests:
              cpu: 50m
              memory: 96Mi             # keep low to ease scheduling on small node
            limits:
              cpu: "500m"
              memory: 384Mi            # [INCREASE] was 256Mi; reduce OOM risk
          startupProbe:
            enabled: true
            exec:
              command: ["ak", "healthcheck"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10        # [INCREASE] was 5; reduce false-negative on slow nodes
            failureThreshold: 120
          readinessProbe:
            enabled: true
            exec:
              command: ["ak", "healthcheck"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10        # [INCREASE] was 5
            failureThreshold: 60
          livenessProbe:
            enabled: true
            exec:
              command: ["ak", "healthcheck"]
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10        # [INCREASE] was 5
            failureThreshold: 6
  destination: 
    server: https://kubernetes.default.svc
    namespace: authentik
  syncPolicy: 
    automated: 
      prune: true
      selfHeal: true
    syncOptions: 
    - CreateNamespace=true